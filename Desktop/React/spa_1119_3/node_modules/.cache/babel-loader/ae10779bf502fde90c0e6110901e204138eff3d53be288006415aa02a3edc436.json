{"ast":null,"code":"var _jsxFileName = \"/Users/park/Desktop/React/spa_1115_4/src/cmponents/pages/Analyze.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: '월별 수입 및 지출 분석'\n    }\n  },\n  scales: {\n    y: {\n      beginAtZero: true,\n      stepSize: 0.1,\n      // Y 축 칸당 0.1원으로 설정\n      ticks: {\n        callback: function (value, index, values) {\n          return value.toFixed(1) + '원';\n        }\n      }\n    }\n  }\n};\nconst label = '월별 근무';\nexport const Analyze = ({\n  updateMonthlyData\n}) => {\n  _s();\n  const [monthlyData, setMonthlyData] = useState(0);\n  useEffect(() => {\n    console.log(\"Fetching monthly data...\");\n\n    // 11월 데이터 가져오기\n    const novemberData = JSON.parse(localStorage.getItem(`monthlyData_10`)) || [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10000, 0];\n    const novemberValue = novemberData[10];\n    console.log(\"November value:\", novemberValue);\n    setMonthlyData(novemberValue);\n  }, [updateMonthlyData]);\n  const data = {\n    labels: [label],\n    datasets: [{\n      label,\n      data: [monthlyData],\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analyze\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Analyze, \"znmcadY6ZwYEcy1YFygZUE4FnLg=\");\n_c = Analyze;\nvar _c;\n$RefreshReg$(_c, \"Analyze\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","stepSize","ticks","callback","value","index","values","toFixed","label","Analyze","updateMonthlyData","_s","monthlyData","setMonthlyData","console","log","novemberData","JSON","parse","localStorage","getItem","novemberValue","data","labels","datasets","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/park/Desktop/React/spa_1115_4/src/cmponents/pages/Analyze.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js/auto';\n\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n    },\n    title: {\n      display: true,\n      text: '월별 수입 및 지출 분석',\n    },\n  },\n  scales: {\n    y: {\n      beginAtZero: true,\n      stepSize: 0.1, // Y 축 칸당 0.1원으로 설정\n      ticks: {\n        callback: function (value, index, values) {\n          return value.toFixed(1) + '원';\n        },\n      },\n    },\n  },\n};\n\nconst label = '월별 근무';\n\nexport const Analyze = ({ updateMonthlyData }) => {\n  const [monthlyData, setMonthlyData] = useState(0);\n\n  useEffect(() => {\n    console.log(\"Fetching monthly data...\");\n\n    // 11월 데이터 가져오기\n    const novemberData = JSON.parse(localStorage.getItem(`monthlyData_10`)) || [0,0,0,0,0,0,0,0,0,0,10000,0];\n    const novemberValue = novemberData[10];\n\n    console.log(\"November value:\", novemberValue);\n    setMonthlyData(novemberValue);\n  }, [updateMonthlyData]);\n\n\n  const data = {\n    labels: [label],\n    datasets: [\n      {\n        label,\n        data: [monthlyData],\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"analyze\">\n      <Bar options={options} data={data} />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtGR,KAAK,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE9E,MAAMI,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,MAAM,EAAE;IACNC,CAAC,EAAE;MACDC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,GAAG;MAAE;MACfC,KAAK,EAAE;QACLC,QAAQ,EAAE,SAAAA,CAAUC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAE;UACxC,OAAOF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;QAC/B;MACF;IACF;EACF;AACF,CAAC;AAED,MAAMC,KAAK,GAAG,OAAO;AAErB,OAAO,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACdoC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;IAEvC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAE,gBAAe,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;IACxG,MAAMC,aAAa,GAAGL,YAAY,CAAC,EAAE,CAAC;IAEtCF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEM,aAAa,CAAC;IAC7CR,cAAc,CAACQ,aAAa,CAAC;EAC/B,CAAC,EAAE,CAACX,iBAAiB,CAAC,CAAC;EAGvB,MAAMY,IAAI,GAAG;IACXC,MAAM,EAAE,CAACf,KAAK,CAAC;IACfgB,QAAQ,EAAE,CACR;MACEhB,KAAK;MACLc,IAAI,EAAE,CAACV,WAAW,CAAC;MACnBa,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACErC,OAAA;IAAKsC,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtBvC,OAAA,CAACT,GAAG;MAACW,OAAO,EAAEA,OAAQ;MAACgC,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/BWF,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}