{"ast":null,"code":"var _jsxFileName = \"/Users/park/Desktop/React/spa_1115_4/src/cmponents/pages/Analyze.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js/auto';\nimport faker from 'faker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: '월별 수입 및 지출 분석'\n    }\n  }\n};\nconst labels = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'];\nexport const Analyze = () => {\n  _s();\n  const [monthlyData, setMonthlyData] = useState(Array(12).fill(0));\n  useEffect(() => {\n    // 월별 데이터 가져오기\n    const fetchedData = Array(12).fill(0).map((_, index) => {\n      const storedData = JSON.parse(localStorage.getItem(`monthlyData_${index}`)) || 0;\n      return storedData;\n    });\n    setMonthlyData(fetchedData);\n  }, []);\n  const data = {\n    labels,\n    datasets: [{\n      label: '월별 근무',\n      data: monthlyData,\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analyze\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      option: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Analyze, \"zd87OZcf5+lv+qyvtJwUbyE2DWQ=\");\n_c = Analyze;\nvar _c;\n$RefreshReg$(_c, \"Analyze\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","faker","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","text","labels","Analyze","_s","monthlyData","setMonthlyData","Array","fill","fetchedData","map","_","index","storedData","JSON","parse","localStorage","getItem","data","datasets","label","backgroundColor","className","children","option","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/park/Desktop/React/spa_1115_4/src/cmponents/pages/Analyze.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js/auto';\nimport faker from 'faker';\n\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n    },\n    title: {\n      display: true,\n      text: '월별 수입 및 지출 분석',\n    },\n  },\n};\n\nconst labels = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'];\n\nexport const Analyze = () => {\n\n    const [monthlyData, setMonthlyData] = useState(Array(12).fill(0));\n\n    useEffect(() => {\n        // 월별 데이터 가져오기\n        const fetchedData = Array(12).fill(0).map((_, index) => {\n          const storedData = JSON.parse(localStorage.getItem(`monthlyData_${index}`)) || 0;\n          return storedData;\n        });\n    \n        setMonthlyData(fetchedData);\n      }, []);\n\n      const data = {\n        labels,\n        datasets: [\n            {\n                label: '월별 근무',\n                data: monthlyData,\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            },\n        ],\n      };\n\n      return(\n        <div className=\"analyze\">\n            <Bar option = {options} data={data}/>\n        </div>\n      );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,eAAe;AACrG,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BT,KAAK,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE9E,MAAMK,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,MAAMC,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAE1F,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC2B,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAEjE3B,SAAS,CAAC,MAAM;IACZ;IACA,MAAM4B,WAAW,GAAGF,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MACtD,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAE,eAAcL,KAAM,EAAC,CAAC,CAAC,IAAI,CAAC;MAChF,OAAOC,UAAU;IACnB,CAAC,CAAC;IAEFP,cAAc,CAACG,WAAW,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,IAAI,GAAG;IACXhB,MAAM;IACNiB,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,OAAO;MACdF,IAAI,EAAEb,WAAW;MACjBgB,eAAe,EAAE;IACrB,CAAC;EAEP,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpB/B,OAAA,CAACV,GAAG;MAAC0C,MAAM,EAAI9B,OAAQ;MAACwB,IAAI,EAAEA;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd,CAAC;AAACxB,EAAA,CA9BWD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}